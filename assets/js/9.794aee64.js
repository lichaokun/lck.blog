(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{150:function(t,s,n){"use strict";n.r(s);var a=n(0),o=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"服务器部署与发布"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#服务器部署与发布","aria-hidden":"true"}},[t._v("#")]),t._v(" 服务器部署与发布")]),n("h2",{attrs:{id:"_1-生产环境所需要素"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-生产环境所需要素","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. 生产环境所需要素")]),n("div",{staticClass:"tip custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("TIP")]),n("ol",[n("li",[t._v("购买自己的域名")]),n("li",[t._v("购买自己的服务器")]),n("li",[t._v("域名备案")]),n("li",[t._v("配置服务器应用环境")]),n("li",[t._v("安装配置数据库")]),n("li",[t._v("项目远程部署发布与更新")])])]),n("h2",{attrs:{id:"_2-远程登录服务器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-远程登录服务器","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. 远程登录服务器")]),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("// 登录,服务器为Ubuntu 16.04.4 LTS版本\n"),n("span",{attrs:{class:"token function"}},[t._v("ssh")]),t._v(" root@公网ip\n\n// 显示硬盘信息\n"),n("span",{attrs:{class:"token function"}},[t._v("fdisk")]),t._v(" -l\n\n// 查看硬盘使用情况\n"),n("span",{attrs:{class:"token function"}},[t._v("df")]),t._v(" -h\n\n// 显示所有目录\n"),n("span",{attrs:{class:"token function"}},[t._v("ls")]),t._v(" -a\n")])])]),n("h2",{attrs:{id:"_3-配置root及权限帐号"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-配置root及权限帐号","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. 配置root及权限帐号")]),n("h3",{attrs:{id:"_3-1-添加用户"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-添加用户","aria-hidden":"true"}},[t._v("#")]),t._v(" 3-1. 添加用户")]),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("// 添加用户\nadduser  username\n\n// 以sudo来调用\ngpasswd -a username "),n("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v("\n\n// \n"),n("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" visudo\n\n// 在user privilege specification中添加一行\nusername ALL"),n("span",{attrs:{class:"token operator"}},[t._v("=")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ALL:ALL"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" ALL\nctrl + x保存， 然后shift + y 回车退出\n")])])]),n("h3",{attrs:{id:"_3-2-配置本地无密码-ssh-登录"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-配置本地无密码-ssh-登录","aria-hidden":"true"}},[t._v("#")]),t._v(" 3-2. 配置本地无密码 SSH 登录")]),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("// 查看根目录\n"),n("span",{attrs:{class:"token function"}},[t._v("pwd")]),t._v("\n\n// 查看有没有.ssh文件夹\n"),n("span",{attrs:{class:"token function"}},[t._v("ls")]),t._v(" -a\n\n// 创建.ssh， 进入目录\n"),n("span",{attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" .ssh\n"),n("span",{attrs:{class:"token function"}},[t._v("cd")]),t._v(" .ssh\n\n// 生成私/公钥，服务器和本地登录的电脑都需要生成，把本地电脑生成的公钥上传至服务器的authorized_keys文件中，然后通过算法比对来实现无密码登录\nssh-keygen -t rsa -b 4096 -C "),n("span",{attrs:{class:"token string"}},[t._v('"邮箱"')]),t._v("\n然后一路回车不输入密码\n在.ssh 中 "),n("span",{attrs:{class:"token function"}},[t._v("ls")]),t._v(" 可以看到生成了id_rsa id_rsa.pub\n\n// 查看id_rsa \n"),n("span",{attrs:{class:"token function"}},[t._v("cat")]),t._v(" id_rsa\n\n// 开启ssh代理\n"),n("span",{attrs:{class:"token function"}},[t._v("eval")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"'),n("span",{attrs:{class:"token variable"}},[n("span",{attrs:{class:"token variable"}},[t._v("$(")]),t._v("ssh-agent -s"),n("span",{attrs:{class:"token variable"}},[t._v(")")])]),t._v('"')]),t._v("\n返回 Agent pid xxxxx  20702\n\n// 把key加入到代理中\nssh-add ~/.ssh/id_rsa\n\n// 创建授权文件\n"),n("span",{attrs:{class:"token function"}},[t._v("vi")]),t._v(" authorized_keys\n输入shift + "),n("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v("  ，然后wq"),n("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v("保存\n\n// 把本地的公钥输入进去\n"),n("span",{attrs:{class:"token function"}},[t._v("vi")]),t._v(" authorized_keys\ni 输入本地公钥, esc, 输入shift + "),n("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v("  ，然后wq"),n("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v("保存\n\n// 修改authorized_keys权限\n"),n("span",{attrs:{class:"token function"}},[t._v("chmod")]),t._v(" 600 authorized_keys\n\n// 重启ssh服务\n"),n("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("service")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("ssh")]),t._v(" restart\n")])])]),n("h2",{attrs:{id:"_4-增强服务器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-增强服务器","aria-hidden":"true"}},[t._v("#")]),t._v(" 4. 增强服务器")]),n("h3",{attrs:{id:"_4-1-修改服务器默认登录端口"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-修改服务器默认登录端口","aria-hidden":"true"}},[t._v("#")]),t._v(" 4-1. 修改服务器默认登录端口")]),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("// 修改默认的22端口, 最好是开两个，怕修改错误后导致登录不进去了\n"),n("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("vi")]),t._v(" /etc/ssh/sshd_config\n\n// 找到port，按下i激活修改模式，修改端口, 不要修改到0-1024端口, 然后在最下面找到UseDNS为no,在最下面新增username,esc 退出修改模式, "),n("span",{attrs:{class:"token function"}},[t._v("shift")]),t._v(" + :, wq"),n("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v("保存退出\nport xxxxx \nAllowUsers username\n\n// 重启ssh服务\n"),n("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("service")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("ssh")]),t._v(" restart\n\n// 重新登录\n"),n("span",{attrs:{class:"token function"}},[t._v("ssh")]),t._v(" -p 端口号 username@ip地址\n")])])]),n("div",{staticClass:"tip custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("TIP")]),n("p",[t._v("如果还登录不上去的话，直接去阿里云服务器的控制台添加一份安全组规则入方向，端口号为自己设定的端口号即可。")])]),n("h3",{attrs:{id:"_4-2-禁用root登录"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-禁用root登录","aria-hidden":"true"}},[t._v("#")]),t._v(" 4-2. 禁用root登录")]),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("// 继续修改这个文件\n"),n("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("vi")]),t._v(" /etc/ssh/sshd_config\n\n// 设置PermitRootLogin 和PasswordAuthentication， 保存后退出\nPermitRootLogin no\n和PasswordAuthentication no\n\n// 重启ssh服务\n"),n("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("service")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("ssh")]),t._v(" restart\n")])])]),n("div",{staticClass:"tip custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("TIP")]),n("p",[t._v("记得查看有没有这个，禁止空密码登录，一定要设置为no\nPermitEmptyPasswords no")])]),n("h3",{attrs:{id:"_4-3-配置-iptables-和-fail2ban-增强安全防护"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-配置-iptables-和-fail2ban-增强安全防护","aria-hidden":"true"}},[t._v("#")]),t._v(" 4-3. 配置 iptables 和 Fail2Ban 增强安全防护")]),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("// 清空所有iptables规则\n"),n("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" iptables -F\n\n// 添加规则, 具体配置如下\n"),n("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("vi")]),t._v(" /etc/iptables.up.rules\n\n* filter\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("# allow all connections")]),t._v("\n-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("# allow out traffic")]),t._v("\n-A OUTPUT -j ACCEPT\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("# allow http https ")]),t._v("\n-A INPUT -p TCP --dport 443 -j ACCEPT\n-A INPUT -p TCP --dport 80 -j ACCEPT\n-A INPUT -p TCP --dport 8088 -j ACCEPT\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("# allow ssh port login")]),t._v("\n-A INPUT -p tcp -m state --state NEW --dport 39999 -j ACCEPT\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("# ping")]),t._v("\n-A INPUT -p icmp -m icmp --icmp-type 8 -j ACCEPT\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("# log denied calls")]),t._v("\n-A INPUT -m limit --limit 5/min -j LOG --log-prefix "),n("span",{attrs:{class:"token string"}},[t._v('"iptables denied:"')]),t._v(" --log-level 7\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("# drop incomming sensitive connections")]),t._v("\n-A INPUT -p tcp --dport 80 -i eth0 -m state --state NEW -m recent --set\n-A INPUT -p tcp --dport 80 -i eth0 -m state --state NEW -m recent --update --seconds 60 --hitcount 150 -j DROP\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("# reject all other inbound ")]),t._v("\n-A INPUT -j REJECT\n-A FORWARD -j REJECT\n\nCOMMIT\n\n// 配置路径，修改了iptables后需要执行这个命令来重启规则\n"),n("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" iptables-restore "),n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" /etc/iptables.up.rules\n\n// 激活防火墙,查看防火墙状态\n"),n("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" ufw status\n"),n("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" ufw "),n("span",{attrs:{class:"token function"}},[t._v("enable")]),t._v("\n\n// 设置关机后自动启动的脚本，内容如下\n"),n("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("vi")]),t._v(" /etc/network/if-up.d/iptables\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("#!/bin/sh")]),t._v("\niptables-restore /etc/iptables.up.rules\n\n// 给与脚本权限\n"),n("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("chmod")]),t._v(" +x /etc/network/if-up.d/iptables\n")])])]),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("// 安装Fail2Ban\n"),n("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("install")]),t._v(" fail2ban\n\n// 查看配置文件\n"),n("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("vi")]),t._v(" /etc/fail2ban/jail.conf\n\n// 修改bantime,action\nbantime "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" 3600\naction "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" %"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("action_mw"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("s\n\n// 查看有没有运行\n"),n("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("service")]),t._v(" fail2ban status\n")])])]),n("h2",{attrs:{id:"_5-搭建-nodejs-生产环境"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-搭建-nodejs-生产环境","aria-hidden":"true"}},[t._v("#")]),t._v(" 5. 搭建 Nodejs 生产环境")]),n("h3",{attrs:{id:"_5-1-搭建服务器nodejs环境"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-搭建服务器nodejs环境","aria-hidden":"true"}},[t._v("#")]),t._v(" 5-1. 搭建服务器Nodejs环境")]),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("// 更新一下系统\n"),n("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" update\n\n// 安装需要的包\n"),n("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("install")]),t._v(" vim openssl build-essential libssl-dev "),n("span",{attrs:{class:"token function"}},[t._v("wget")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("curl")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("git")]),t._v("\n\n// 拷贝https://github.com/creationix/nvm的脚本并且执行，安装nvm\n"),n("span",{attrs:{class:"token function"}},[t._v("wget")]),t._v(" -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh "),n("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("bash")]),t._v("\n\n// 新开一个窗口安装nodejs\nnvm "),n("span",{attrs:{class:"token function"}},[t._v("install")]),t._v(" v10.13.0\n\n// 默认使用版本\nnvm use v10.13.0\nnvm "),n("span",{attrs:{class:"token function"}},[t._v("alias")]),t._v(" default v10.13.0\n\n// 查看node版本，安装淘宝镜像\nnode -v \n"),n("span",{attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("install")]),t._v(" -g cnpm --registry"),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("https://registry.npm.taobao.org\n\n// 增加系统文件监控数目\n"),n("span",{attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" fs.inotify.max_user_watches"),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("524288 "),n("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("tee")]),t._v(" -a /etc/sysctl.conf "),n("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" sysctl -p\n\n// 安装一些需要的模块\ncnpm i pm2 webpack gulp grunt-cli -g\n\n// 在根目录写一个app.js启动服务\n"),n("span",{attrs:{class:"token function"}},[t._v("vi")]),t._v(" app.js\nconst http "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" require"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'http'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nhttp.createServer"),n("span",{attrs:{class:"token punctuation"}},[t._v("((")]),t._v("req,res"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    res.writeHead"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("200, "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{attrs:{class:"token string"}},[t._v("'Content-type'")]),n("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'text/plain'")]),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    res.end"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'hello world'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".listen"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("8081, "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console.log"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'Server running!'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nnode app.js\n\n// 访问ip地址加端口号即可,如果没有反应需要在服务器配置安全组8081的端口号进出口规则\n")])])]),n("h3",{attrs:{id:"_5-2-部署pm2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-部署pm2","aria-hidden":"true"}},[t._v("#")]),t._v(" 5-2. 部署pm2")]),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("// 可以直接通过pm2开启服务\npm2 start app.js\n\n// 查看列表\npm2 list\n\n// 查看详情\npm2 show app\n\n// 查看日志\npm2 logs\n")])])]),n("h2",{attrs:{id:"_6-配置-nginx-反向代理-nodejs-端口"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-配置-nginx-反向代理-nodejs-端口","aria-hidden":"true"}},[t._v("#")]),t._v(" 6. 配置 Nginx 反向代理 Nodejs 端口")]),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("// 安装nginx，版本\n"),n("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("install")]),t._v(" nginx\nnginx -v\n\n// 查看文件\n"),n("span",{attrs:{class:"token function"}},[t._v("cd")]),t._v(" /etc/nginx/\n"),n("span",{attrs:{class:"token function"}},[t._v("ls")]),t._v("\n"),n("span",{attrs:{class:"token function"}},[t._v("cd")]),t._v(" conf.d\n\n// 新建配置文件\n"),n("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("vi")]),t._v(" xxx-com-8080.conf"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("文件名"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nupstream xxx "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    server 127.0.0.1:8081"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nserver "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    listen: 80"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    server_name: ip地址或者域名地址"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    location / "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        proxy_set_header X-Real-IP "),n("span",{attrs:{class:"token variable"}},[t._v("$remote_addr")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        proxy_set_header X-Forward-For "),n("span",{attrs:{class:"token variable"}},[t._v("$proxy_add_x_forwarded_for")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        proxy_set_header Host "),n("span",{attrs:{class:"token variable"}},[t._v("$http_host")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        proxy_set_header X-Nginx-Proxy "),n("span",{attrs:{class:"token boolean"}},[t._v("true")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        proxy_pass http://xxx"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        proxy_redirect off"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n// 查看nginx.conf文件\n"),n("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("vi")]),t._v(" nginx.conf\n查看这句是否正确include /etc/nginx/conf.d/*.conf"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n取消注释 server_tokens off,这句是后台返回的server里面不显示版本信息，只显示一个nginx\n\n\n// 测试配置文件是否正确\n"),n("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" nginx -t\n\n// 重启nginx\n"),n("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" nginx -s reload\n\n// 访问ip地址即可,如果没有反应需要在服务器配置安全组80的端口号进出口规则\n// 解析域名，填入自己的ip地址即可，可以访问域名+端口号\n")])])]),n("h2",{attrs:{id:"_7-服务器配置安装-mongodb"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-服务器配置安装-mongodb","aria-hidden":"true"}},[t._v("#")]),t._v(" 7. 服务器配置安装 MongoDB")]),n("h3",{attrs:{id:"_7-1-安装-mongodb"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-安装-mongodb","aria-hidden":"true"}},[t._v("#")]),t._v(" 7-1. 安装 MongoDB")]),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("// 根据步骤安装 \nhttps://docs.mongodb.com/manual/tutorial/install-mongodb-on-ubuntu/\n\n// 开启mongodb\n"),n("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("service")]),t._v(" mongod start\n\n// 查看日志有没有开启,或者直接mongo\n"),n("span",{attrs:{class:"token function"}},[t._v("cat")]),t._v(" /var/log/mongodb/mongod.log\nmongo\n\n// 在iptables中开启27017这个端口，不然mongo链接失败\n"),n("span",{attrs:{class:"token comment"}},[t._v("# mongodb connection")]),t._v("\n-A INPUT -s 127.0.0.1 -p tcp --destination-port 27017 -m state --state NEW,ESTABLISHED -j ACCEPT\n-A OUTPUT -d 127.0.0.1 -p tcp --source-port 27017 -m state --state ESTABLISHED -j ACCEPT\n\n// 重启规则\n"),n("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" iptables-restore "),n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" /etc/iptables.up.rules\n\n// 停止和重启mongodb\n"),n("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("service")]),t._v(" mongod stop\n"),n("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("service")]),t._v(" mongod restart\n\n// 修改默认27017端口，找到net下面port修改，然后记得更新iptables，重载iptabales\n"),n("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("vi")]),t._v(" /etc/mongod.conf\n\n// 登录mongo\nmongo --port xxxxx\n")])])]),n("h2",{attrs:{id:"_8-服务器正式部署和发布上线-nodejs-项目"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_8-服务器正式部署和发布上线-nodejs-项目","aria-hidden":"true"}},[t._v("#")]),t._v(" 8. 服务器正式部署和发布上线 Nodejs 项目")]),n("h3",{attrs:{id:"_8-1-上传项目代码到线上私有-git-仓库"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-上传项目代码到线上私有-git-仓库","aria-hidden":"true"}},[t._v("#")]),t._v(" 8-1. 上传项目代码到线上私有 Git 仓库")]),n("h3",{attrs:{id:"_8-2-配置-pm2-一键部署线上项目结构"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-配置-pm2-一键部署线上项目结构","aria-hidden":"true"}},[t._v("#")]),t._v(" 8-2. 配置 PM2 一键部署线上项目结构")]),n("h2",{attrs:{id:"_9-配置https证书"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_9-配置https证书","aria-hidden":"true"}},[t._v("#")]),t._v(" 9. 配置https证书")]),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("// 把解压后的证书上传服务器,:/home/xxx代表复制到服务器的那个路径中\n"),n("span",{attrs:{class:"token function"}},[t._v("scp")]),t._v(" -P 19999"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("服务器端口号"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" ./xxx.crt root@服务器ip地址:/home/xxx\n"),n("span",{attrs:{class:"token function"}},[t._v("scp")]),t._v(" -P 19999"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("服务器端口号"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" ./xxx.key root@服务器ip地址:/home/xxx\n\n// 修改nginx配置\nupstream tag "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  server 127.0.0.1:8081"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nserver "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  listen 80"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  server_name www.xxx.com"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token comment"}},[t._v("#rewrite ^(.*) https://$host$1 permanent;")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" 301 https://www.xxx.com"),n("span",{attrs:{class:"token variable"}},[t._v("$request_uri")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nserver "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  listen 443"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  server_name www.xxx.com"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  ssl on"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  ssl_certificate /etc/nginx/conf.d/ssl/cert-1541496084645_www.khweb.top.crt"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  ssl_certificate_key /etc/nginx/conf.d/ssl/cert-1541496084645_www.khweb.top.key"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  ssl_session_timeout 5m"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  ssl_protocols SSLv2 SSLv3 TLSv1"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  ssl_ciphers ALL:"),n("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v("ADH:"),n("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v("EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  ssl_prefer_server_ciphers on"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token variable"}},[t._v("$ssl_protocol")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('""')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    rewrite ^"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v(".*"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" https://"),n("span",{attrs:{class:"token variable"}},[t._v("$host")]),n("span",{attrs:{class:"token variable"}},[t._v("$1")]),t._v(" permanent"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  location / "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    proxy_set_header X-Real-IP "),n("span",{attrs:{class:"token variable"}},[t._v("$remote_addr")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    proxy_set_header X-Forward-For "),n("span",{attrs:{class:"token variable"}},[t._v("$proxy_add_x_forwarded_for")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    proxy_set_header Host "),n("span",{attrs:{class:"token variable"}},[t._v("$http_host")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    proxy_set_header X-Nginx-Proxy "),n("span",{attrs:{class:"token boolean"}},[t._v("true")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    proxy_pass http://tag"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    proxy_redirect off"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n// 重启nginx\n"),n("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" nginx -s reload\n\n// 服务器安全组配置443端口即可\n")])])]),n("div",{staticClass:"tip custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("TIP")]),n("p",[t._v("存放证书的路径不要放在根目录,不然sudo nginx -t会报错")])])])}],!1,null,null,null);o.options.__file="README.md";s.default=o.exports}}]);